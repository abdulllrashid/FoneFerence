package com.example.training.myapplication;

import android.app.Activity;
import android.app.Fragment;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;


public class MainActivity extends Activity {

    private TextView mTextMessage;
    public BottomNavigationView bottomNavigationView;
    private FirebaseDatabase mDatabase;
    private FirebaseAuth mAuth;
    public String Uid, ob;

    private DatabaseReference myRef, eRef;

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {

            switch (item.getItemId()) {
                case R.id.EventDetails:
                    mAuth = FirebaseAuth.getInstance();
                    Uid = mAuth.getCurrentUser().getUid().toString();
                    mDatabase = FirebaseDatabase.getInstance();
                    myRef = mDatabase.getReference("Users/" + Uid + "/Eventid");
                    myRef.addValueEventListener(new ValueEventListener() {
                        @Override
                        public void onDataChange(DataSnapshot dataSnapshot) {
                            if (dataSnapshot.getValue() == null) {
//
                                getFragmentManager().beginTransaction().replace(R.id.fragment_container, new EventListFragmentNull()).commit();

                            } else {
                                getFragmentManager().beginTransaction().replace(R.id.fragment_container, new EventListFragment()).commit();
                            }
                        }

                        @Override
                        public void onCancelled(DatabaseError databaseError) {

                        }
                    });

                    return true;

                case R.id.Attendees:
//                    mTextMessage.setText("Attendees");
                    getFragmentManager().beginTransaction().replace(R.id.fragment_container, new AudianceListFragment()).commit();
                    return true;
                case R.id.Goods:
//                    mTextMessage.setText("Goods");
                    getFragmentManager().beginTransaction().replace(R.id.fragment_container, new GoodsListFragment()).commit();
                    return true;
                case R.id.Profile:
//                    mTextMessage.setText("Profile");
                    getFragmentManager().beginTransaction().replace(R.id.fragment_container, new ProfileFragment()).commit();
                    return true;
            }
            return false;
        }
    };


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        bottomNavigationView = findViewById(R.id.navigation);
//        getFragmentManager().beginTransaction().replace(R.id.fragment_container, new EventListFragmentNull()).commit();
        mAuth = FirebaseAuth.getInstance();
        Uid = mAuth.getCurrentUser().getUid();
        mDatabase = FirebaseDatabase.getInstance();
        myRef = mDatabase.getReference("Users/" + Uid + "/Eventid");
        myRef.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                if (dataSnapshot.getValue() == null ) {
                    getFragmentManager().beginTransaction().replace(R.id.fragment_container, new EventListFragmentNull()).commit();

                } else {
                    getFragmentManager().beginTransaction().replace(R.id.fragment_container, new EventListFragment()).commit();
                }
          }

            @Override
            public void onCancelled(DatabaseError databaseError) {

            }
        });
        bottomNavigationView.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
        Log.d("MainActivity", "onCreate");
    }

    public void Slides(View v) {
        startActivity(new Intent(getApplicationContext(), Slide_list.class));
    }

    public void Notes(View view) {
        startActivity(new Intent(getApplicationContext(), Slidenote.class));
    }

    public void addetails(View view) {
        startActivity(new Intent(getApplicationContext(), EventRegistrationForm.class));
    }

    public void Certificates(View view) {
        startActivity(new Intent(getApplicationContext(), Certificates_List.class));
    }

    public void foodcoupens(View v) {
        startActivity(new Intent(getApplicationContext(), Coupon_List.class));
    }

    public void EditEventClick(View v) {
        startActivity(new Intent(getApplicationContext(), Editevent.class));
    }

}



package com.example.training.myapplication;

import android.app.DatePickerDialog;
import android.app.TimePickerDialog;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;

import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.TimePicker;
import android.widget.Toast;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

import java.util.Calendar;

public class EventRegistrationForm extends AppCompatActivity implements View.OnClickListener {

    EditText txtDate, txtTime, eventName, descriptioN, venuE, speakerDetails;
    private int mYear, mMonth, mDay, mHour, mMinute;
    ImageButton btnDatePicker, btnTimePicker;
    private DatabaseReference mDatabase;
    Button btnAddEvent;
    String format;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_event_registration_form);

        btnAddEvent = (Button) findViewById(R.id.btnAddEvent);
        btnDatePicker = (ImageButton) findViewById(R.id.btnDate);
        btnTimePicker = (ImageButton) findViewById(R.id.btnTime);
        txtDate = (EditText) findViewById(R.id.set_date);
        txtTime = (EditText) findViewById(R.id.set_time);
        eventName = (EditText) findViewById(R.id.eventName);
        descriptioN = (EditText) findViewById(R.id.description);
        venuE = (EditText) findViewById(R.id.venue);
        speakerDetails = (EditText) findViewById(R.id.speakerDetails);

        btnAddEvent.setOnClickListener(this);
        btnDatePicker.setOnClickListener(this);
        btnTimePicker.setOnClickListener(this);

        mDatabase = FirebaseDatabase.getInstance().getReference();

    }
    private void writeEvents( String eventname, String description, String time,String date, String venue, String speakerdetails) {

        AddEvents events = new AddEvents(eventname,description,time,date,venue,speakerdetails);
        mDatabase.child("events").push().setValue(events);
    }

    @Override
    public void onClick(View v) {
        if (v == btnDatePicker) {

            // Get Current Date
            final Calendar c = Calendar.getInstance();
            mYear = c.get(Calendar.YEAR);
            mMonth = c.get(Calendar.MONTH);
            mDay = c.get(Calendar.DAY_OF_MONTH);

            DatePickerDialog datePickerDialog = new DatePickerDialog(this,
                    new DatePickerDialog.OnDateSetListener() {

                        @Override
                        public void onDateSet(DatePicker view, int year,
                                              int monthOfYear, int dayOfMonth) {

                            txtDate.setText(dayOfMonth + "-" + (monthOfYear + 1) + "-" + year);

                        }
                    }, mYear, mMonth, mDay);
            datePickerDialog.show();
        }
        if (v == btnTimePicker) {

            // Get Current Time
            final Calendar c = Calendar.getInstance();
            mHour = c.get(Calendar.HOUR_OF_DAY);
            mMinute = c.get(Calendar.MINUTE);

            // Launch Time Picker Dialog
            TimePickerDialog timePickerDialog = new TimePickerDialog(this,
                    new TimePickerDialog.OnTimeSetListener() {

                        @Override
                        public void onTimeSet(TimePicker view, int hourOfDay,
                                              int minute) {
                            if (hourOfDay == 0) {

                                hourOfDay += 12;

                                format = "AM";
                            }
                            else if (hourOfDay == 12) {

                                format = "PM";

                            }
                            else if (hourOfDay > 12) {

                                hourOfDay -= 12;

                                format = "PM";

                            }
                            else {

                                format = "AM";
                            }

                            txtTime.setText(hourOfDay + ":" + minute+" "+ format);
                        }
                    }, mHour, mMinute, false);
            timePickerDialog.show();
        }
        if (v == btnAddEvent) {
            final String eventname = eventName.getText().toString();
            final String description = descriptioN.getText().toString();
            final String time = txtTime.getText().toString();
            final String date = txtDate.getText().toString();
            final String venue = venuE.getText().toString();
            final String speakerderails = speakerDetails.getText().toString();
            writeEvents(eventname,description,time,date,venue,speakerderails);

            Toast.makeText(this, "adding events...", Toast.LENGTH_SHORT).show();

        }
    }



}
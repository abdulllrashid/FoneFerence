<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.training.myapplication"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="18"
        android:targetSdkVersion="26" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />

    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.example.training.myapplication.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.example.training.myapplication.permission.C2D_MESSAGE" />

    <application
        android:allowBackup="true"
        android:debuggable="true"
        android:icon="@drawable/themeapp"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:testOnly="true"
        android:theme="@style/AppTheme" >

        <!-- <provider -->
        <!-- android:authorities="${applicationId}.my.package.name.provider" -->
        <!-- android:name=".GenericFileProvider" -->
        <!-- android:exported="false" -->
        <!-- android:grantUriPermissions="true"> -->


        <!-- <meta-data -->
        <!-- android:name="android.support.FILE_PROVIDER_PATHS" -->
        <!-- android:resource="@xml/provider_paths"/> -->


        <!-- </provider> -->
        <activity
            android:name="com.example.training.myapplication.SplashScreen"
            android:label="@string/app_name"
            android:screenOrientation="reversePortrait"
            android:theme="@style/Theme.AppCompat.Light" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <meta-data
            android:name="preloaded_fonts"
            android:resource="@array/preloaded_fonts" />

        <activity android:name="com.example.training.myapplication.SigninScreen" />
        <activity android:name="com.example.training.myapplication.MainActivity" />
        <activity android:name="com.example.training.myapplication.EventRegistrationForm" />
        <activity android:name="com.example.training.myapplication.EventDetailsList" />
        <activity android:name="com.example.training.myapplication.Slide_list" />
        <activity android:name="com.example.training.myapplication.Coupon_List" />
        <activity android:name="com.example.training.myapplication.User_Registration" />
        <activity android:name="com.example.training.myapplication.Editevent" />
        <activity android:name="com.example.training.myapplication.Generateqrcode" />
        <!-- <activity android:name=".Slidenote" /> -->
        <activity android:name="com.example.training.myapplication.ProfileView" />
        <activity android:name="com.example.training.myapplication.Audiencelist_profile" />
        <activity android:name="com.example.training.myapplication.Audience_list" />
        <activity android:name="com.example.training.myapplication.OptionsMenu" />
        <!-- <activity android:name=".QRCodeReader" /> -->
        <activity android:name="com.example.training.myapplication.Main2Activity" />
        <activity android:name="com.example.training.myapplication.BaseActivity" />
        <activity android:name="com.example.training.myapplication.Slidenote_list" />
        <activity android:name="com.example.training.myapplication.QRCodeReader" />
        <!-- <activity android:name=".SigninScreen" /> -->
        <activity android:name="com.example.training.myapplication.Certificates_List" />
        <activity android:name="com.example.training.myapplication.Upload_File" />
        <activity android:name="com.example.training.myapplication.UploadSlideNote" />
        <activity android:name="com.example.training.myapplication.UploadCoupon" />
        <!--
          <activity android:name=".Slidenote_list" />
          <activity android:name=".Slide_list" />

          <activity android:name=".Editevent" />
        -->
        <!-- <activity android:name=".Coupon_List" /> -->

        <meta-data
            android:name="android.support.VERSION"
            android:value="26.1.0" />

        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />
        <!--
 FirebaseMessagingService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>
        <receiver
            android:name="com.google.android.gms.measurement.AppMeasurementInstallReferrerReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INSTALL_PACKAGES" >
            <intent-filter>
                <action android:name="com.android.vending.INSTALL_REFERRER" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.google.android.gms.measurement.AppMeasurementService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name="com.google.android.gms.measurement.AppMeasurementJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE" />

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="com.example.training.myapplication" />
            </intent-filter>
        </receiver>
        <!--
 FirebaseInstanceIdService performs security checks at runtime,
             no need for explicit permissions despite exported="true"
        -->
        <service
            android:name="com.google.firebase.iid.FirebaseInstanceIdService"
            android:exported="true" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
            </intent-filter>
        </service>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.example.training.myapplication.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="com.android.tools.ir.server.InstantRunContentProvider"
            android:authorities="com.example.training.myapplication.com.android.tools.ir.server.InstantRunContentProvider"
            android:multiprocess="true" />
    </application>

</manifest>